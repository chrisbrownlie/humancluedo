% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GameState.R
\name{GameState}
\alias{GameState}
\title{Custom class for holding state of current game}
\description{
Custom class for holding state of current game

Custom class for holding state of current game
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{conn}}{the database connection}

\item{\code{active_game}}{the ID of the active game this object instance represents}

\item{\code{active_game_name}}{the name of the active game this object instance represents}

\item{\code{active_player}}{the identifier of the currently active player,
in the active game}

\item{\code{active_player_name}}{the name of the currently active player,
in the active game}

\item{\code{players}}{a duckplyr tibble indicating game players and status}

\item{\code{items}}{a duckplyr tibble indicating items in the game}

\item{\code{locations}}{a duckplyr tibble indicating locations in the game}

\item{\code{contracts}}{a duckplyr tibble indicating game contracts}

\item{\code{details}}{a one-row duckplyr tibble indicating the metadata for
the game, including the win condition (duel or spree) and object
population method (auto, admin, players)}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-GameState-new}{\code{GameState$new()}}
\item \href{#method-GameState-initialise_game}{\code{GameState$initialise_game()}}
\item \href{#method-GameState-create_game}{\code{GameState$create_game()}}
\item \href{#method-GameState-add_item}{\code{GameState$add_item()}}
\item \href{#method-GameState-remove_item}{\code{GameState$remove_item()}}
\item \href{#method-GameState-add_location}{\code{GameState$add_location()}}
\item \href{#method-GameState-remove_location}{\code{GameState$remove_location()}}
\item \href{#method-GameState-set_contracts}{\code{GameState$set_contracts()}}
\item \href{#method-GameState-is_initialised}{\code{GameState$is_initialised()}}
\item \href{#method-GameState-get_target}{\code{GameState$get_target()}}
\item \href{#method-GameState-get_item}{\code{GameState$get_item()}}
\item \href{#method-GameState-get_location}{\code{GameState$get_location()}}
\item \href{#method-GameState-is_alive}{\code{GameState$is_alive()}}
\item \href{#method-GameState-target_is_alive}{\code{GameState$target_is_alive()}}
\item \href{#method-GameState-confirm_kill}{\code{GameState$confirm_kill()}}
\item \href{#method-GameState-get_player_status}{\code{GameState$get_player_status()}}
\item \href{#method-GameState-get_performance}{\code{GameState$get_performance()}}
\item \href{#method-GameState-set_active_player}{\code{GameState$set_active_player()}}
\item \href{#method-GameState-get_game_status}{\code{GameState$get_game_status()}}
\item \href{#method-GameState-clone}{\code{GameState$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GameState-new"></a>}}
\if{latex}{\out{\hypertarget{method-GameState-new}{}}}
\subsection{Method \code{new()}}{
Create a new game state
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GameState$new(game_id = NULL, conn = db_conn())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{game_id}}{optional game ID}

\item{\code{conn}}{database connection object, defaults to using db_conn()}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a new object of class GameState
Populate game state using the database
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GameState-initialise_game"></a>}}
\if{latex}{\out{\hypertarget{method-GameState-initialise_game}{}}}
\subsection{Method \code{initialise_game()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GameState$initialise_game(game_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{game_id}}{the ID of the game to use to populate the object
Create a new game from a tibble of contracts}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GameState-create_game"></a>}}
\if{latex}{\out{\hypertarget{method-GameState-create_game}{}}}
\subsection{Method \code{create_game()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GameState$create_game(
  players,
  game_name,
  win_condition = c("duel", "spree"),
  obj_pop_method = c("players", "auto", "admin")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{players}}{a character vector of unique player names. The first of these
will be the admin.}

\item{\code{game_name}}{a name for the new game}

\item{\code{win_condition}}{the win condition for the game (duel or spree)}

\item{\code{obj_pop_method}}{the object population method for the game (auto,
admin or players)
Add an item to the current game}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GameState-add_item"></a>}}
\if{latex}{\out{\hypertarget{method-GameState-add_item}{}}}
\subsection{Method \code{add_item()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GameState$add_item(item, generated_by)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{item}}{the name of the item}

\item{\code{generated_by}}{who or what the item was generated by
Remove an item from the current game}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GameState-remove_item"></a>}}
\if{latex}{\out{\hypertarget{method-GameState-remove_item}{}}}
\subsection{Method \code{remove_item()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GameState$remove_item(item)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{item}}{the item to remove
Add a location to the current game}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GameState-add_location"></a>}}
\if{latex}{\out{\hypertarget{method-GameState-add_location}{}}}
\subsection{Method \code{add_location()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GameState$add_location(location, generated_by)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{location}}{the name of the location}

\item{\code{generated_by}}{who or what the location was generated by
Remove a location from the current game}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GameState-remove_location"></a>}}
\if{latex}{\out{\hypertarget{method-GameState-remove_location}{}}}
\subsection{Method \code{remove_location()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GameState$remove_location(location)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{location}}{the location to remove}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GameState-set_contracts"></a>}}
\if{latex}{\out{\hypertarget{method-GameState-set_contracts}{}}}
\subsection{Method \code{set_contracts()}}{
Use the games players, items and locations to set kill contracts.
Done in such a way that you won't kill someone who is trying to kill you
until the end of the game.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GameState$set_contracts()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GameState-is_initialised"></a>}}
\if{latex}{\out{\hypertarget{method-GameState-is_initialised}{}}}
\subsection{Method \code{is_initialised()}}{
Has a game been initialised?
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GameState$is_initialised()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GameState-get_target"></a>}}
\if{latex}{\out{\hypertarget{method-GameState-get_target}{}}}
\subsection{Method \code{get_target()}}{
Get my contract target
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GameState$get_target()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GameState-get_item"></a>}}
\if{latex}{\out{\hypertarget{method-GameState-get_item}{}}}
\subsection{Method \code{get_item()}}{
Get my contract item
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GameState$get_item()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GameState-get_location"></a>}}
\if{latex}{\out{\hypertarget{method-GameState-get_location}{}}}
\subsection{Method \code{get_location()}}{
Get my contract location
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GameState$get_location()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GameState-is_alive"></a>}}
\if{latex}{\out{\hypertarget{method-GameState-is_alive}{}}}
\subsection{Method \code{is_alive()}}{
Return TRUE if the current player is alive, FALSE otherwise
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GameState$is_alive()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GameState-target_is_alive"></a>}}
\if{latex}{\out{\hypertarget{method-GameState-target_is_alive}{}}}
\subsection{Method \code{target_is_alive()}}{
Is my contract target still alive?
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GameState$target_is_alive()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GameState-confirm_kill"></a>}}
\if{latex}{\out{\hypertarget{method-GameState-confirm_kill}{}}}
\subsection{Method \code{confirm_kill()}}{
Confirm a kill
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GameState$confirm_kill(execution_time = lubridate::now(), notes = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{execution_time}}{the time of execution}

\item{\code{notes}}{any notes to add to the contract after completing}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GameState-get_player_status"></a>}}
\if{latex}{\out{\hypertarget{method-GameState-get_player_status}{}}}
\subsection{Method \code{get_player_status()}}{
Get the status of all other players
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GameState$get_player_status(as_html = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{as_html}}{if TRUE, will return a HTML list of player statuses,
if FALSE (the default) will return a two column tibble of player name
and status}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GameState-get_performance"></a>}}
\if{latex}{\out{\hypertarget{method-GameState-get_performance}{}}}
\subsection{Method \code{get_performance()}}{
Get performance in the current game
Set the active player
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GameState$get_performance()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GameState-set_active_player"></a>}}
\if{latex}{\out{\hypertarget{method-GameState-set_active_player}{}}}
\subsection{Method \code{set_active_player()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GameState$set_active_player(id, player)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the identifier of the current player}

\item{\code{player}}{the name of the current player. If missing, it
is assumed that id will match to an existing player and in that
case this method will set the active player name and ID.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GameState-get_game_status"></a>}}
\if{latex}{\out{\hypertarget{method-GameState-get_game_status}{}}}
\subsection{Method \code{get_game_status()}}{
Helper to determine whether the game is waiting for players to join or not
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GameState$get_game_status()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GameState-clone"></a>}}
\if{latex}{\out{\hypertarget{method-GameState-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GameState$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
